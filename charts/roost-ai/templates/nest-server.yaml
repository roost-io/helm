apiVersion: v1
kind: ConfigMap
metadata:
  name: server-config
  namespace: {{ .Release.Namespace }}
data:
  NODE_ENV: "production"
  DEFAULT_PORT: "3000"
  API_HOST_URL:  {{ .Values.enterprise.domain_url }}/api
  LOGIN_REDIRECT_URL:  {{ .Values.enterprise.domain_url }}/login
  NODE_DOMAIN_OR_IP: {{ .Values.enterprise.consoleProxy }}
  ENABLE_SALESFORCE:  "false"
  USE_ROOST_DEV: "false"
  ROOST_VER: {{ .Values.enterprise.roostVersion }}
  DB_VER: {{ .Values.enterprise.dbVersion }}
  JWT_SECRET:  32-character-secure-long-secret
  GOOGLE_CLIENT_ID: {{ .Values.auth.googleClientID }}
  GOOGLE_CLIENT_SECRET: {{ .Values.auth.googleClientSecret }}
  AZURE_CLIENT_ID: {{ .Values.auth.azureClientID }}
  AZURE_CLIENT_SECRET: {{ .Values.auth.azureClientSecret }}
  GITHUB_CLIENT_ID: {{ .Values.auth.githubClientID }}
  GITHUB_CLIENT_SECRET: {{ .Values.auth.githubClientSecret }}
  LINKEDIN_CLIENT_ID: {{ .Values.auth.linkedinClientID }}
  LINKEDIN_CLIENT_SECRET:  {{ .Values.auth.linkedinClientSecret }}
  OKTA_CLIENT_ISSUER: {{ .Values.auth.oktaClientIssuer }}
  OKTA_CLIENT_ID: {{ .Values.auth.oktaClientID }}
  OKTA_CLIENT_SECRET: {{ .Values.auth.oktaClientSecret }}
  AZURE_ADFS_CLIENT_ISSUER: {{ .Values.auth.azureADFSClientIssuer }}
  AZURE_ADFS_CLIENT_ID: {{ .Values.auth.azureADFSClientID }}
  AZURE_ADFS_CLIENT_SECRET: {{ .Values.auth.azureADFSClientSecret }}
  ORG_NAME: {{ .Values.enterprise.orgName }}
  ORG_ADMIN_EMAIL: {{ .Values.enterprise.orgAdminEmail }}
  ORG_EMAIL_DOMAIN:  {{ .Values.enterprise.orgEmailDomain }}
  ORG_CLUSTER_LAUNCHER_IP:  null
  EAAS_SERVER_USERNAME: null
  EAAS_SERVER_KEY_PATH: null
  ORG_APP_NAME: {{ .Values.enterprise.orgName }}
  DB_HOST: mysql-db-svc
  DB_PORT: "3306"
  DB_USERNAME: {{ .Values.database.user }}
  DB_PASSWORD: {{ .Values.database.password }}
  DB_SCHEMA_NAME: {{ .Values.database.schema }}
  EMAIL_SENDER: {{ .Values.enterprise.email.sender }}
  EMAIL_SENDER_PASS: {{ .Values.enterprise.email.senderPass }}
  EMAIL_SMTP: {{ .Values.enterprise.email.smtp }}
  EMAIL_SMTP_PORT: {{ .Values.enterprise.email.smtPort }}
  ECS_MODE: "true"
  USE_NO_AUTH: "{{ .Values.auth.noAuth }}"
  LOCAL_AUTH_KEY: {{ .Values.auth.localAuthKey }}
  JUMPHOST_SVC: roost-backend-server
  EAAS_SVC: roost-backend-server
  # AI_SERVER_SVC: roostgpt-server
  # LAUNCHER_SVC: ""
  LICENSE_KEY: {{ .Values.roostgpt.licenseKey }}

--- 

apiVersion: v1
kind: Service
metadata:
  name: roostai-nest-server
  namespace: {{ .Release.Namespace }}
spec:
  # type: NodePort
  selector:
    app: roostai-nest-server
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      # nodePort: 30425  

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: roostai-nest-server-data
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
{{- if .Values.efs.enabled }}
  storageClassName: efs-sc
{{- end }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: roostai-nest-server
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: roostai-nest-server
  template:
    metadata:
      labels:
        app: roostai-nest-server
    spec:
     # hostNetwork: true
      containers:
        - name: roostai-nest-server
          image: zbio/roost-app:{{ .Values.enterprise.roostVersion }}
          envFrom:
            - configMapRef:
                name: server-config
          volumeMounts:
            - mountPath: /var/tmp/Roost
              name: roostai-nest-server-data
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
      volumes:
        - name: roostai-nest-server-data
          persistentVolumeClaim:
            claimName: roostai-nest-server-data
---
